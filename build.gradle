buildscript {
    ext.kotlin_version = '1.3.30'
    ext.spring_boot_version = '2.1.3.RELEASE'
    ext.log4j_version = '2.11.2'

    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

group 'spring-server'
version '1.0.0'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


sourceSets {
    main {
        kotlin {
            srcDirs = ['src/app']
        }
        resources {
            srcDirs = ['src/resources']
        }
        java.srcDirs = []
    }
    test {
        kotlin.srcDirs = java.srcDirs = resources.srcDirs = []
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

//Because of log4j conflicts with it
configurations {
    implementation {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.springframework.boot:spring-boot:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-autoconfigure:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-webflux:$spring_boot_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //For archiving
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
